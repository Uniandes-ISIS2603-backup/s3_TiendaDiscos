{
	"info": {
		"_postman_id": "9a3af22a-c6a6-4261-be6c-c2e1c3795427",
		"name": "AuthorBooks Tests",
		"description": "Colección de pruebas sobre el recurso AuthorBook",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"_postman_id": "a0530002-b587-40d9-a3b1-335810a1a4e6",
			"name": "Crear una editorial",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "26b4a3f8-4298-4055-a615-8ee7b042b8ab",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_e\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\":\"Norma\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/editorials",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"editorials"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea una nueva editorial. El recurso solo tiene de atributo \"name\" que debe ser único. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "220a6ed8-9a59-4018-b4d0-4e886a5a5b7a",
			"name": "Crear un libro",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8391fc71-23d9-4d29-9e3a-8ba1274ccd92",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_b\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"Jorge Fondebrider traza un mundo fantÃ¡stico con mapas de la geografÃ\\u00ada real y de sus mitologÃ\\u00adas, observando a los hombres lobo que han vivido en la imaginaciÃ³n de Europa y AmÃ©rica.\",\n    \"image\": \"https://static.iris.net.co/arcadia/upload/images/2017/7/31/64899_1.jpg\",\n    \"isbn\": \"930330149-8\",\n    \"editorial\": { \"id\": {{new_id_e}},\n                   \"name\": \"Norma\" },\n    \"name\": \"Historia de los hombres lobo 2\",\n    \"publishingdate\": \"2000-08-20T00:00:00-05:00\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/books",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"books"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea un nuevo libro. El ISBN del recurso debe ser único. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "db705506-370f-4394-bf2f-f7661b9aeaa1",
			"name": "Crear un libro 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "52e7e58a-bd11-4cfd-8da3-7a9e8bbc7c66",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_b2\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"Descripción para el libro 2\",\n    \"image\": \"https://static.iris.net.co/arcadia/upload/images/2017/7/31/64899_1.jpg\",\n    \"isbn\": \"930330149-2\",\n    \"editorial\": { \"id\": {{new_id_e}} ,\n                   \"name\": \"Norma\"},\n    \"name\": \"Historia de los programadores\",\n    \"publishingdate\": \"2003-08-20T00:00:00-05:00\"\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/books",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"books"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea un nuevo libro. El ISBN del recurso debe ser único. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "1076ef18-aa96-4585-b893-1334f345fb50",
			"name": "Crear un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f9f90381-0e2e-4579-93ea-3adddfb389c7",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a\",data.id);",
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"birthDate\": \"1927-03-03T00:00:00-05:00\",\n        \"description\": \"fue un escritor, guionista, editor y periodista colombiano. En 1982 recibió el Premio Nobel de Literatura.\",\n        \"image\": \"https://commons.wikimedia.org/wiki/File:Gabriel_Garcia_Marquez.jpg\",\n        \"name\": \"Gabriel José de la Concordia García Márquez\"\n    }"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea un nuevo autor. El Id es inicializado por la BD y se debe ver en la respuesta.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "3617c64d-62c3-418f-bac3-06507a49506b",
			"name": "Agregar un libro a un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5295fcb5-7252-463d-b81a-5124c1a067be",
						"type": "text/javascript",
						"exec": [
							"tests[\"No genera error en el Post\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors/{{new_id_a}}/books/{{new_id_b}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors",
						"{{new_id_a}}",
						"books",
						"{{new_id_b}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nAsocia un libro a un autor en la aplicación. \r\n\r\nSe envía el Id del autor y el del libro a asociar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "a83b629b-9979-4b5d-91cd-b6ba72df3375",
			"name": "Agregar un libro que no existe a un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e3c06212-e39e-4bc3-9fd1-8abbd1c29ace",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se deberia asociar el author ya que el book no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /books/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors/{{new_id_a}}/books/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors",
						"{{new_id_a}}",
						"books",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nAsocia un libro que no existe a un autor en la aplicación. \r\n\r\nSe envía el Id del autor y el del libro a asociar en la URL de la petición.\r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /books/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"_postman_id": "7f482e48-dc80-4c71-b647-4bd83ec37308",
			"name": "Obtener un libro de un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e7e73fe8-8e21-4eae-a1bf-973c5ccfbfbc",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors/{{new_id_a}}/books/{{new_id_b}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors",
						"{{new_id_a}}",
						"books",
						"{{new_id_b}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un libro de un autor en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del autor y del libro a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "b5f2de78-ae79-4a95-8e2d-9249b4ee820e",
			"name": "Obtener un libro que no existe de un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9fe51cc4-6ef5-40d2-bc5f-e1200af00028",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se deberia obtener ningun book ya que el book no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /books/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors/{{new_id_a}}/books/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors",
						"{{new_id_a}}",
						"books",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un libro que no existe de un autor en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error.\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"_postman_id": "f5808dd9-66cd-4494-98d9-6d38b398bf86",
			"name": "Obtener un libro no asociado de un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "10a04ef5-aca6-43ae-bd0a-b1006aa19487",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se puede obtener un book que no esta asociado\"] = responseCode.code === 412;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El libro no está asociado al autor\");"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors/{{new_id_a}}/books/{{new_id_b2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors",
						"{{new_id_a}}",
						"books",
						"{{new_id_b2}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un libro que no esta asociado a un autor en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El libro no está asociado al autor\".\r\n\r\n**Código http esperado: 412**"
			},
			"response": []
		},
		{
			"_postman_id": "72041d76-5fcf-411e-a6db-2ee075e569ba",
			"name": "Asociar libros a un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "c7c5215a-ed1c-498e-9d19-9f5570cfd17d",
						"type": "text/javascript",
						"exec": [
							"tests[\"No genera error en el Put\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n    \"description\": \"Jorge Fondebrider traza un mundo fantÃƒÂ¡stico con mapas de la geografÃƒ\\u00ada real y de sus mitologÃƒ\\u00adas, observando a los hombres lobo que han vivido en la imaginaciÃƒÂ³n de Europa y AmÃƒÂ©rica.\",\n    \"editorial\": {\n        \"id\": {{new_id_e}},\n        \"name\": \"Norma\"\n    },\n    \"id\": {{new_id_b}},\n    \"image\": \"https://static.iris.net.co/arcadia/upload/images/2017/7/31/64899_1.jpg\",\n    \"isbn\": \"930330149-8\",\n    \"name\": \"Historia de los hombres lobo 2\",\n    \"publishingdate\": \"2000-08-20T00:00:00-05:00\"\n},\n{\n    \"description\": \"DescripciÃ³n para el libro 2\",\n    \"editorial\": {\n        \"id\": {{new_id_e}},\n        \"name\": \"Norma\"\n    },\n    \"id\": {{new_id_b2}},\n    \"image\": \"https://static.iris.net.co/arcadia/upload/images/2017/7/31/64899_1.jpg\",\n    \"isbn\": \"930330149-2\",\n    \"name\": \"Historia de los programadores\",\n    \"publishingdate\": \"2003-08-20T00:00:00-05:00\"\n}]"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors/{{new_id_a}}/books",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors",
						"{{new_id_a}}",
						"books"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza la lista de libros un autor existente.\r\n\r\nSe envía el Id en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "e1a92bd8-35b2-42ce-931e-48aafd3ef102",
			"name": "Obtener los libros de un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "49c94c15-1d54-43ee-adef-aec230710223",
						"type": "text/javascript",
						"exec": [
							"var data= JSON.parse(responseBody);",
							"tests[\"No genera error en el Get\"] = responseCode.code === 200;",
							"tests[\"books count - author\"] = data.length >= 1;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors/{{new_id_a}}/books",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors",
						"{{new_id_a}}",
						"books"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta los libros de un autor en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del autor y el del libro a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "f5ca3387-cd8d-4c1b-b2bf-05b0aa35d74e",
			"name": "Asociar libros que no existen a un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5f1389a0-da68-45bc-90aa-eb08f3c8ac36",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se pueden asociar los books ya que estos no existen\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /books/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "[{\n    \"description\": \"Jorge Fondebrider traza un mundo fantastico con mapas de la geografia real y de sus mitologias, observando a los hombres lobo que han vivido en la imaginacion de Europa y America.\",\n    \"id\": 0,\n    \"image\": \"https://static.iris.net.co/arcadia/upload/images/2017/7/31/64899_1.jpg\",\n    \"isbn\": \"930330149-8\",\n    \"name\": \"Historia de los hombres lobo 2\",\n    \"publishingdate\": \"2000-08-20T00:00:00-05:00\"\n}\n]"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors/{{new_id_a}}/books",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors",
						"{{new_id_a}}",
						"books"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza la lista de libros de una editorial existente con libros que no existen. \r\n\r\nSe envía el Id en la URL de la petición.\r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /books/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"_postman_id": "6b72dd14-90dc-4036-a363-edaba63c51e4",
			"name": "Borrarle un libro a un author",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "9510b6cd-b566-4cfa-b16f-9c783800176d",
						"type": "text/javascript",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors/{{new_id_a}}/books/{{new_id_b}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors",
						"{{new_id_a}}",
						"books",
						"{{new_id_b}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra la asociación entre un libro y un autor. Se envían los ids del autor y del libro creados anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"_postman_id": "75e48c40-8f03-4c08-a521-a87b5986f626",
			"name": "Borrarle un libro 2 a un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "dca29117-b352-4fc0-893d-46bfdd4cd9bf",
						"type": "text/javascript",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors/{{new_id_a}}/books/{{new_id_b2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors",
						"{{new_id_a}}",
						"books",
						"{{new_id_b2}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra la asociación entre un libro y un autor. Se envían los ids del autor y del libro creados anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"_postman_id": "3d8f8f22-9f0a-40e9-a355-fef84f9905aa",
			"name": "Borrarle un libro a un autor que no existe",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "91d9959e-4825-4dd7-88e3-3e33b988c765",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se deberia eliminar ninguna asociacion ya que el author no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /authors/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors/0/books/{{new_id_b}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors",
						"0",
						"books",
						"{{new_id_b}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nBorra la asociación entre a un libro y un autor que no existe en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /authors/0/books no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"_postman_id": "ff8895fe-1552-40e4-b6dd-0ca18813090d",
			"name": "Borrar un libro que no existe a un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "db442b05-4aea-4f64-9db1-a28176069f5e",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se deberia eliminar ninguna asociacion ya que el book no existe\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /books/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors/{{new_id_a}}/books/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors",
						"{{new_id_a}}",
						"books",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nBorra la asociación entre un libro que no existe y un autor en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error.\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"_postman_id": "4d5b6a67-8c6a-48db-80db-7064117ebd43",
			"name": "Borrar un libro",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "4f1e4dc3-ca8a-4517-a81e-7e899528fbf4",
						"type": "text/javascript",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/books/{{new_id_b}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"books",
						"{{new_id_b}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un libro. Se envía el id del libro creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"_postman_id": "615f8813-ce0b-4f9e-aa45-8e6259893be7",
			"name": "Borrar un libro 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "ac2c9e22-f152-46e9-8d4e-206c81e38e7b",
						"type": "text/javascript",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/books/{{new_id_b2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"books",
						"{{new_id_b2}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un libro. Se envía el id del libro creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"_postman_id": "8ea5dba3-4ee9-41dd-ae40-c7fb0d590fb0",
			"name": "Borrar un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b1ff16df-2255-4221-9b63-b026ee61a544",
						"type": "text/javascript",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors/{{new_id_a}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors",
						"{{new_id_a}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un autor. Se envía el id del autor creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"_postman_id": "8996bd3b-fe4b-4692-935a-4f56e5c9b577",
			"name": "Borrar una editorial",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "cc2b1ce6-fadd-420d-bd94-d209263e0af7",
						"type": "text/javascript",
						"exec": [
							"tests[\"No genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/editorials/{{new_id_e}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"editorials",
						"{{new_id_e}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra una editorial. Se envía el id de la editorial creada anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "abcf9e66-ab71-40eb-b132-268e8563ad4d",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "99c46863-220f-4853-9796-88ddc37ae16a",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}