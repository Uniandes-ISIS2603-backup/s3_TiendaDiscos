{
	"info": {
		"_postman_id": "ab908a2e-5545-4489-957e-d747e1955bf8",
		"name": "PrizeAuthor Tests",
		"description": "Colección de pruebas sobre el recurso PrizeAuthor",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"_postman_id": "abea48a1-b363-484d-9cb7-6a7d49594321",
			"name": "Crear una organización",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bd46dd39-b07d-4bf0-b05f-f121debd387d",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_o\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Real Academia Sueca de Ciencias\",\r\n    \"tipo\": \"PRIVADA\"\r\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/organizations",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"organizations"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea una nueva organización. El recurso tiene el atributo \"name\" que debe ser único. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "2a6624df-e09a-4783-aa03-0535cb849767",
			"name": "Crear una organizacion 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "886d6d83-f309-4ab8-a7e8-fac2621a6e6c",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_o2\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Real Academia de espanol\",\r\n    \"tipo\": \"PRIVADA\"\r\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/organizations",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"organizations"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea una nueva organizacion. El recurso tiene el atributo \"name\" que debe ser único. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "da98eefd-d01c-4151-89b6-b617e2c023dd",
			"name": "Crear un premio",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "821e467b-f573-424a-8c4a-a69473523571",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_p\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t \"name\": \"Hugo Award\",\r\n\t \"description\": \"The Hugo Awards are a set of literary awards given annually for the best science fiction or fantasy works and achievements of the previous year.\",\r\n\t \"fechaEntrega\": \"2015-10-1 3:00 PM GMT+1:00\",\r\n\t \"organization\":\r\n       {\r\n            \"id\": {{new_id_o}},\r\n    \t\t\"name\": \"Real Academia Sueca de Ciencias\",\r\n    \t\t\"tipo\": \"PRIVADA\"\r\n       }\r\n\r\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/prizes",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"prizes"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea un nuevo premio. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "c1b74eda-a155-40c4-b038-4db2c0fe2f46",
			"name": "Crear un premio 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "991e6429-46da-4930-a743-40bbca82a763",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_p2\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);",
							""
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t \"name\": \"Varon Award\",\r\n\t \"description\": \"The Varon Awards are a set of peace awards given monthly for the best peace book of the year.\",\r\n\t \"fechaEntrega\": \"2016-10-1 3:00 PM GMT+1:00\",\r\n\t \"organization\":\r\n       {\r\n            \"id\": {{new_id_o2}},\r\n    \t\t\"name\": \"Real Academia de espanol\",\r\n    \t\t\"tipo\": \"PRIVADA\"\r\n       }\r\n\r\n}"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/prizes",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"prizes"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea un nuevo premio. El Id es inicializado por la BD y se debe ver en la respuesta. \r\n\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "7840b555-6174-429c-9387-266de9594ae8",
			"name": "Crear un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "f9c4bdfa-e96f-4ad9-9c5e-7fa2cf8902ee",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"birthDate\": \"1927-03-03T00:00:00-05:00\",\n        \"description\": \"fue un escritor, guionista, editor y periodista colombiano. En 1982 recibió el Premio Nobel de Literatura.\",\n        \"image\": \"https://commons.wikimedia.org/wiki/File:Gabriel_Garcia_Marquez.jpg\",\n        \"name\": \"Gabriel José de la Concordia García Márquez\"\n    }"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea un nuevo autor. El Id es inicializado por la BD y se debe ver en la respuesta.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "92ebe9f8-eba0-4602-b05f-0efba3e2aabc",
			"name": "Crear autor 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "964c17d7-47f6-425a-baba-05b73b06f193",
						"type": "text/javascript",
						"exec": [
							"var data = JSON.parse(responseBody);",
							"postman.setGlobalVariable(\"new_id_a2\",data.id);",
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;",
							"console.log(data.id);"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "    {\n        \"birthDate\": \"1966-07-22T00:00:00-05:00\",\n        \"description\": \"fue un escritor, guionista, editor y periodista colombiano..\",\n        \"image\": \"https://commons.wikimedia.org/wiki/File:Descargakoj.jpg\",\n        \"name\": \"Gustavo Bolivar Moreno\"\n    }"
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nCrea un nuevo autor. El Id es inicializado por la BD y se debe ver en la respuesta.\r\nPara la prueba, se guarda el id en una variable que será utilizada en otras peticiones de la colección.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "813a40f8-27a2-44b8-bb93-d366ca687459",
			"name": "Agregarle un autor a un premio",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e9b76351-dc3d-4ac6-beab-81871addfd96",
						"type": "text/javascript",
						"exec": [
							"tests[\"no genera error en el Post\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/prizes/{{new_id_p}}/author/{{new_id_a}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"prizes",
						"{{new_id_p}}",
						"author",
						"{{new_id_a}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nAsocia un premio a un autor en la aplicación. \r\n\r\nSe envía el Id del autor y el del premio a asociar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "40bb7330-f1c4-4a29-a3d4-0f2df9f537d6",
			"name": "Asociar un autor  que no existe a un premio",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bd685e11-33db-4118-be98-28f9dacd0dc7",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se puede asociar el author ya que este no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /authors/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/prizes/{{new_id_p}}/author/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"prizes",
						"{{new_id_p}}",
						"author",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nAsocia un autor que no existe a un premio en la aplicación. \r\n\r\nSe envía el Id del autor y el del premio a asociar en la URL de la petición.\r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /authors/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"_postman_id": "917bd151-4ae2-4a53-89ad-e8854250de2e",
			"name": "Obtener el autor de un premio",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "6e5d490f-c9a8-4f77-9ff8-cd2807cf9b20",
						"type": "text/javascript",
						"exec": [
							"console.log(responseBody);",
							"var data = JSON.parse(responseBody);",
							"tests[\"no genera error en el Get\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/prizes/{{new_id_p}}/author",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"prizes",
						"{{new_id_p}}",
						"author"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un autor de un premio en la aplicación. \r\nLa petición no tiene cuerpo.\r\n\r\nSe envía el Id del autor y del premio a consultar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "7ff3b516-5b7c-4051-bb60-a83d88bc912e",
			"name": "Obtener el autor que no existe de un premio",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "3297c68a-6c35-4e0f-96bb-711c10512c2c",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se puede obtener el author ya que este no existe.\"] = responseCode.code === 404;",
							"let id = pm.variables.get(\"new_id_p2\");",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /prizes/\"+id+\"/author no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/prizes/{{new_id_p2}}/author",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"prizes",
						"{{new_id_p2}}",
						"author"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nConsulta un autor que no existe de un premio en la aplicación.  \r\n\r\nPara la prueba se verifica que se genera el error.\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"_postman_id": "c9d01043-b60a-4be3-a826-2469ad3c71be",
			"name": "Asociar un autor a un premio",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "b595cd14-771c-4768-9c3e-b1faacdf23ce",
						"type": "text/javascript",
						"exec": [
							"tests[\"no genera error en el Put\"] = responseCode.code === 200;"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/prizes/{{new_id_p}}/author/{{new_id_a2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"prizes",
						"{{new_id_p}}",
						"author",
						"{{new_id_a2}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nActualiza el autor de un premio existente. Se envían los Ids de las entidades asociar en la URL de la petición.\r\n\r\n**Código http esperado: 200**"
			},
			"response": []
		},
		{
			"_postman_id": "52efa588-8b2e-4e3a-8c89-3e5abe85f6c9",
			"name": "Asociar un autor que no existe a un premio",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "826eb21c-0515-42ac-95a6-9367c2a4182f",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se puede reemplazar el author al prize ya que el nuevo no existe.\"] = responseCode.code === 404;",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"El recurso /authors/0 no existe.\");"
						]
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/prizes/{{new_id_p}}/author/0",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"prizes",
						"{{new_id_p}}",
						"author",
						"0"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nAsocia un autor que no existe a un premio en la aplicación. \r\n\r\nSe envían los Ids a asociar en la URL de la petición.\r\n\r\nPara la prueba se verifica que se genera el error y el mensaje \"El recurso /authors/0 no existe.\".\r\n\r\n**Código http esperado: 404**"
			},
			"response": []
		},
		{
			"_postman_id": "633a30f8-09a4-406b-9ec5-28dc5202594a",
			"name": "Borrar un premio con autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "935bb55e-32d4-48b9-bcd6-ad0df156ee7a",
						"type": "text/javascript",
						"exec": [
							"tests[\"No se puede borrar un prize que tenga un author asociado.\"] = responseCode.code === 412;",
							"let id = pm.variables.get(\"new_id_p\");",
							"tests[\"Mensaje correcto de error\"] = responseBody.has(\"No se puede borrar el premio con id = \"+id+\" porque tiene un autor asociado\");"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/prizes/{{new_id_p}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"prizes",
						"{{new_id_p}}"
					]
				},
				"description": "**Release: Paso-5**\r\n\r\nBorra un premio existente pero con autor. Verifica que se genera el error.\r\n\r\n**Código HTTP esperado: 412 Precondition failed\".**"
			},
			"response": []
		},
		{
			"_postman_id": "a5d85827-e49c-4984-b245-0c83335aac20",
			"name": "Borrarle el autor a un premio",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "08d9072a-55bf-4641-bbdb-52b352762f65",
						"type": "text/javascript",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/prizes/{{new_id_p}}/author",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"prizes",
						"{{new_id_p}}",
						"author"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra la asociación entre un premio y un autor. Se envían los ids del autor y del premio creados anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"_postman_id": "ae19b7e9-1f12-407a-b5fb-6bc98c048f9f",
			"name": "Borrar un autor",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "bb946ff6-d049-4d41-bf7d-9bdcabb53d6e",
						"type": "text/javascript",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors/{{new_id_a}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors",
						"{{new_id_a}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un autor. Se envía el id del autor creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"_postman_id": "7715f8fe-357f-4e09-9d1a-712e890f318f",
			"name": "Borrar un autor 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "0cffadd9-c487-464d-ba34-ac04f0b25f6f",
						"type": "text/javascript",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/authors/{{new_id_a2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"authors",
						"{{new_id_a2}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un autor. Se envía el id del autor creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"_postman_id": "9ce03966-ce95-41e4-a5b0-e64ac3d863a2",
			"name": "Borrar un premio",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "5af38318-0cba-4c19-ad45-2bb3394069e3",
						"type": "text/javascript",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/prizes/{{new_id_p}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"prizes",
						"{{new_id_p}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un premio. Se envía el id del premio creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"_postman_id": "722e4fcc-ba95-4102-80da-1aee54c6d3bd",
			"name": "Borrar un premio 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8670dccb-1743-4bae-82b1-e4d2b01febe6",
						"type": "text/javascript",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/prizes/{{new_id_p2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"prizes",
						"{{new_id_p2}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra un premio. Se envía el id del premio creado anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"_postman_id": "2e716e70-4875-4990-ae9a-a6d15e757930",
			"name": "Borrar una organización",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "e93d1c9e-0e8c-4ab1-aadd-2128a9232d2e",
						"type": "text/javascript",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/organizations/{{new_id_o}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"organizations",
						"{{new_id_o}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra una organización. Se envía el id de la organización creada petición.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		},
		{
			"_postman_id": "3b84294c-6b54-4dbe-ac68-d626136dd3ec",
			"name": "Borrar una organizacion 2",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "8ca5a162-20b4-41ea-abc1-fd1286d75b2d",
						"type": "text/javascript",
						"exec": [
							"tests[\"no genera error en el Delete\"] = responseCode.code === 204;"
						]
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://{{ip}}:{{puerto}}/frontstepbystep-api/api/organizations/{{new_id_o2}}",
					"protocol": "http",
					"host": [
						"{{ip}}"
					],
					"port": "{{puerto}}",
					"path": [
						"frontstepbystep-api",
						"api",
						"organizations",
						"{{new_id_o2}}"
					]
				},
				"description": "**Release: Paso-5**\n\nBorra una organizacion. Se envía el id de la organizacion creada anteriormente.\n\n**Código HTTP esperado: 204**"
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"id": "0062c40a-acd3-4e89-b997-477e077f4faf",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"id": "e944d212-8a99-4296-9ef7-fd69501a8593",
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}